{"ast":null,"code":"var _jsxFileName = \"/home/talita-pessoal/Documentos/GitHub/react-project/src/Components/ListUsersComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Axios from 'axios';\nimport Modal from './ModalComponent.jsx';\nimport './Style/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CarregaUsers() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [dropdown, setDropdown] = useState(\"\");\n  const modalRef = useRef(null); // Axios.get no mocky para receber o objeto com uma lista de usuários. \n\n  Axios.get('https://www.mocky.io/v2/5d531c4f2e0000620081ddce').then(answer => {\n    const user = answer.data;\n    setUsers(user);\n  });\n\n  const toggleDropdown = () => {\n    console.log(\"show\");\n    setDropdown(\"show\");\n    document.body.addEventListener(\"click\", closeDropdown);\n  };\n\n  const closeDropdown = event => {\n    event.stopPropagation(); //impede de executar listeners dos filhos\n\n    const contain = modalRef.current.contains(event.target);\n\n    if (!contain) {\n      //se clicar fora do modal, ele DESaparece\n      console.log(\"hidden\");\n      setDropdown(\"\");\n      document.body.removeEventListener(\"click\", closeDropdown);\n    }\n  };\n\n  return users.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"usersStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itensLeft\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userPic\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"imgPic\",\n          src: item.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Nome do Usuario: \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ID: \", item.id, \" - Username: \", item.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonPay\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDropdown,\n        id: \"button\",\n        children: \"Pagar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: dropdown,\n        modalRef: modalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this));\n}\n\n_s(CarregaUsers, \"52Ea8FUlqeIqbMtwLok0EbRICn8=\");\n\n_c = CarregaUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarregaUsers\");","map":{"version":3,"sources":["/home/talita-pessoal/Documentos/GitHub/react-project/src/Components/ListUsersComponent.jsx"],"names":["React","useState","useRef","Axios","Modal","CarregaUsers","users","setUsers","dropdown","setDropdown","modalRef","get","then","answer","user","data","toggleDropdown","console","log","document","body","addEventListener","closeDropdown","event","stopPropagation","contain","current","contains","target","removeEventListener","map","item","key","img","name","id","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAO,iBAAP;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAErC,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAK,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMS,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB,CAJqC,CAMrC;;AACAC,EAAAA,KAAK,CAACQ,GAAN,CAAU,kDAAV,EAA8DC,IAA9D,CAAmEC,MAAM,IAAI;AAC3E,UAAMC,IAAI,GAAGD,MAAM,CAACE,IAApB;AACAR,IAAAA,QAAQ,CAACO,IAAD,CAAR;AACD,GAHD;;AAKA,QAAME,cAAc,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAT,IAAAA,WAAW,CAAC,MAAD,CAAX;AACAU,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCC,aAAxC;AACD,GAJD;;AAMA,QAAMA,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,eAAN,GAD6B,CACJ;;AACzB,UAAMC,OAAO,GAAGf,QAAQ,CAACgB,OAAT,CAAiBC,QAAjB,CAA0BJ,KAAK,CAACK,MAAhC,CAAhB;;AACA,QAAI,CAACH,OAAL,EAAc;AAAE;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAU,MAAAA,QAAQ,CAACC,IAAT,CAAcS,mBAAd,CAAkC,OAAlC,EAA2CP,aAA3C;AACD;AACF,GARD;;AAUF,SACEhB,KAAK,CAACwB,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBACV;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAK,UAAA,EAAE,EAAC,QAAR;AAAiB,UAAA,GAAG,EAAED,IAAI,CAACE,GAA3B;AAAgC,UAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAA,0CACoBF,IAAI,CAACG,IADzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,6BACOH,IAAI,CAACI,EADZ,mBAC6BJ,IAAI,CAACK,QADlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEpB,cAAjB;AAAiC,QAAA,EAAE,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAER,QAAlB;AAA4B,QAAA,QAAQ,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF;AAuBC;;GAnDuBL,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Axios from 'axios';\nimport Modal from './ModalComponent.jsx'\nimport './Style/App.css'\n\nexport default function CarregaUsers() {\n\n  const[users, setUsers] = useState([]);\n  const[dropdown, setDropdown] = useState(\"\");\n  const modalRef = useRef(null);\n  \n  // Axios.get no mocky para receber o objeto com uma lista de usuários. \n  Axios.get('https://www.mocky.io/v2/5d531c4f2e0000620081ddce').then(answer => {\n    const user = answer.data;\n    setUsers(user);\n  });\n\n  const toggleDropdown = () => {\n    console.log(\"show\");\n    setDropdown(\"show\");\n    document.body.addEventListener(\"click\", closeDropdown);\n  }\n\n  const closeDropdown = event => {\n    event.stopPropagation(); //impede de executar listeners dos filhos\n    const contain = modalRef.current.contains(event.target);\n    if (!contain) { //se clicar fora do modal, ele DESaparece\n      console.log(\"hidden\");\n      setDropdown(\"\");\n      document.body.removeEventListener(\"click\", closeDropdown);\n    }\n  };\n\nreturn (\n  users.map((item, key) => \n  <div className='usersStyle'>\n    <div className='itensLeft'>\n    <div className='userPic'>\n      <img id=\"imgPic\" src={item.img} alt=''/>\n    </div>\n    <div className='userName'>\n      <div>\n        Nome do Usuario: {item.name}\n      </div>\n      <div>\n        ID: {item.id} - Username: {item.username}\n      </div>\n      </div>\n    </div>\n    <div className='buttonPay'>\n      <button onClick={toggleDropdown} id='button'>Pagar</button>\n      <Modal className={dropdown} modalRef={modalRef}/>\n    </div>\n  </div>\n  )\n  )\n}"]},"metadata":{},"sourceType":"module"}